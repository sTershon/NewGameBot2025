# admin_tools.py
from telebot import TeleBot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton
from database import players, save_db

def register_admin_handlers(bot: TeleBot, ADMINS: list):
    
    # --- –í—ã–¥–∞—Ç—å —Ç–µ–≥ –ø–æ —Ü–≤–µ—Ç—É ---
    @bot.message_handler(func=lambda m: str(m.from_user.id) in ADMINS and m.text == "üé® –í—ã–¥–∞—Ç—å —Ç–µ–≥ –ø–æ —Ü–≤–µ—Ç—É")
    def give_color_tag(message):
        uid = str(message.from_user.id)
        markup = ReplyKeyboardMarkup(resize_keyboard=True)
        colors = ["–ö—Ä–∞—Å–Ω—ã–π", "–°–∏–Ω–∏–π", "–ó–µ–ª—ë–Ω—ã–π", "–ñ—ë–ª—Ç—ã–π", "–§–∏–æ–ª–µ—Ç–æ–≤—ã–π"]
        for color in colors:
            markup.add(KeyboardButton(color))
        markup.add(KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"))
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ü–≤–µ—Ç —Ç–µ–≥–∞ –¥–ª—è –∏–≥—Ä–æ–∫–∞:", reply_markup=markup)
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ü–≤–µ—Ç–∞
    @bot.message_handler(func=lambda m: str(m.from_user.id) in ADMINS)
    def set_tag_color(message):
        if message.text in ["–ö—Ä–∞—Å–Ω—ã–π", "–°–∏–Ω–∏–π", "–ó–µ–ª—ë–Ω—ã–π", "–ñ—ë–ª—Ç—ã–π", "–§–∏–æ–ª–µ—Ç–æ–≤—ã–π"]:
            # –ù–∞–ø—Ä–∏–º–µ—Ä, –≤—ã–¥–∞—ë–º —Ç–µ–≥ –ø–µ—Ä–≤–æ–º—É –∏–≥—Ä–æ–∫—É (–¥–ª—è —Ç–µ—Å—Ç–∞)
            if players:
                player_id = list(players.keys())[0]
                players[player_id]["tag_color"] = message.text
                save_db()
                bot.send_message(message.chat.id, f"‚úÖ –ò–≥—Ä–æ–∫—É {players[player_id]['name']} –≤—ã–¥–∞–Ω —Ç–µ–≥ —Ü–≤–µ—Ç–∞ {message.text}")
            else:
                bot.send_message(message.chat.id, "‚ùå –ù–µ—Ç –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è –≤—ã–¥–∞—á–∏ —Ç–µ–≥–∞")
    
    # --- –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä–æ–∫–∞ ---
    @bot.message_handler(func=lambda m: str(m.from_user.id) in ADMINS and m.text == "üìä –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≥—Ä–æ–∫–∞")
    def change_player_stats(message):
        if not players:
            bot.send_message(message.chat.id, "‚ùå –ù–µ—Ç –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return
        markup = ReplyKeyboardMarkup(resize_keyboard=True)
        for pid, pdata in players.items():
            markup.add(KeyboardButton(f"{pdata['name']} (ID: {pid})"))
        markup.add(KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"))
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä–æ–∫–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:", reply_markup=markup)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –∏–≥—Ä–æ–∫–∞
    @bot.message_handler(func=lambda m: str(m.from_user.id) in ADMINS)
    def edit_player(message):
        if "(ID:" in message.text:
            pid = message.text.split("ID:")[1].replace(")", "").strip()
            if pid in players:
                markup = ReplyKeyboardMarkup(resize_keyboard=True)
                markup.add(KeyboardButton("üí∞ –ò–∑–º–µ–Ω–∏—Ç—å –∑–æ–ª–æ—Ç–æ"))
                markup.add(KeyboardButton("‚≠ê –ò–∑–º–µ–Ω–∏—Ç—å —É—Ä–æ–≤–µ–Ω—å"))
                markup.add(KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"))
                bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –∏–∑–º–µ–Ω–∏—Ç—å –¥–ª—è {players[pid]['name']}:", reply_markup=markup)
