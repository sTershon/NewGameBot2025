# clans.py
from telebot import TeleBot
from telebot.types import ReplyKeyboardMarkup, KeyboardButton
from database import players, clans, save_db, ensure_defaults
import random, time

# –î–æ—Å—Ç—É–ø–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è –∏ –∏—Ö —Å—Ç–æ–∏–º–æ—Å—Ç—å
CLAN_UPGRADES = {
    "–£–ª—É—á—à–µ–Ω–∏–µ –∫–∞–∑–Ω—ã (+50üí∞/—á–∞—Å)": 150,
    "–£–ª—É—á—à–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è": 100,
    "–£–ª—É—á—à–µ–Ω–∏–µ –æ–±–æ—Ä–æ–Ω—ã": 200,
    "–£–ª—É—á—à–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞": 250
}

def get_clan_root_keyboard(uid: str):
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    player = players[uid]
    clan_id = player.get("clan_id")
    if clan_id and clan_id in clans:
        kb.add(KeyboardButton("üìä –ö–ª–∞–Ω—Å–∫–æ–µ –º–µ–Ω—é"))
        kb.add(KeyboardButton("‚¨ÖÔ∏è –í—ã–π—Ç–∏ –∏–∑ –∫–ª–∞–Ω–∞"))
    else:
        kb.add(KeyboardButton("üÜï –°–æ–∑–¥–∞—Ç—å –∫–ª–∞–Ω"))
        kb.add(KeyboardButton("üîç –í—Å—Ç—É–ø–∏—Ç—å –≤ –∫–ª–∞–Ω"))
        kb.add(KeyboardButton("üîç –í—Å—Ç—É–ø–∏—Ç—å –ø–æ ID"))
    kb.add(KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"))
    return kb

def get_clan_management_keyboard():
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(KeyboardButton("üí∞ –í–Ω–µ—Å—Ç–∏ –∑–æ–ª–æ—Ç–æ"))
    kb.add(KeyboardButton("‚¨ÜÔ∏è –£–ª—É—á—à–∏—Ç—å –∫–ª–∞–Ω"))
    kb.add(KeyboardButton("üë• –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤"))
    kb.add(KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"))
    return kb

def get_clan_upgrade_keyboard():
    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    for name, cost in CLAN_UPGRADES.items():
        kb.add(KeyboardButton(f"‚¨ÜÔ∏è {name} ({cost}üí∞)"))
    kb.add(KeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"))
    return kb

def register_clan_handlers(bot: TeleBot):

    @bot.message_handler(func=lambda m: m.text == "üè∞ –ö–ª–∞–Ω—ã")
    def open_clan_menu(message):
        uid = str(message.from_user.id)
        ensure_defaults(uid, message.from_user.first_name)
        bot.send_message(
            message.chat.id,
            "üìú –ö–ª–∞–Ω–æ–≤–æ–µ –º–µ–Ω—é:",
            reply_markup=get_clan_root_keyboard(uid)
        )

    @bot.message_handler(func=lambda m: m.text == "üÜï –°–æ–∑–¥–∞—Ç—å –∫–ª–∞–Ω")
    def create_clan(message):
        uid = str(message.from_user.id)
        ensure_defaults(uid, message.from_user.first_name)
        if players[uid].get("clan_id"):
            bot.send_message(message.chat.id, "‚ùå –¢—ã —É–∂–µ –≤ –∫–ª–∞–Ω–µ!")
            return
        clan_id = str(int(time.time() * 1000) + random.randint(0, 999))
        clans[clan_id] = {
            "name": f"–ö–ª–∞–Ω_{random.randint(100,999)}",
            "owner": uid,
            "deputy": None,
            "members": [uid],
            "level": 1,
            "gold": 0,
            "upgrades": {}
        }
        players[uid]["clan_id"] = clan_id
        save_db()
        bot.send_message(message.chat.id, f"‚úÖ –ö–ª–∞–Ω —Å–æ–∑–¥–∞–Ω! –ù–∞–∑–≤–∞–Ω–∏–µ: {clans[clan_id]['name']}", reply_markup=get_clan_root_keyboard(uid))

    @bot.message_handler(func=lambda m: m.text == "üîç –í—Å—Ç—É–ø–∏—Ç—å –≤ –∫–ª–∞–Ω")
    def join_random_clan(message):
        uid = str(message.from_user.id)
        ensure_defaults(uid, message.from_user.first_name)
        if players[uid].get("clan_id"):
            bot.send_message(message.chat.id, "‚ùå –¢—ã —É–∂–µ –≤ –∫–ª–∞–Ω–µ!")
            return
        if not clans:
            bot.send_message(message.chat.id, "‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–ª–∞–Ω–æ–≤ –¥–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è.")
            return
        clan_id = random.choice(list(clans.keys()))
        clans[clan_id]["members"].append(uid)
        players[uid]["clan_id"] = clan_id
        save_db()
        bot.send_message(message.chat.id, f"‚úÖ –¢—ã –≤—Å—Ç—É–ø–∏–ª –≤ –∫–ª–∞–Ω {clans[clan_id]['name']}", reply_markup=get_clan_root_keyboard(uid))

    @bot.message_handler(func=lambda m: m.text == "üîç –í—Å—Ç—É–ø–∏—Ç—å –ø–æ ID")
    def join_clan_by_id(message):
        uid = str(message.from_user.id)
        ensure_defaults(uid, message.from_user.first_name)
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ ID –∫–ª–∞–Ω–∞, –≤ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –≤—Å—Ç—É–ø–∏—Ç—å:")
        bot.register_next_step_handler(msg, process_clan_id, uid)

    def process_clan_id(message, uid):
        clan_id = message.text.strip()
        if clan_id not in clans:
            bot.send_message(message.chat.id, "‚ùå –ö–ª–∞–Ω —Å —Ç–∞–∫–∏–º ID –Ω–µ –Ω–∞–π–¥–µ–Ω!")
            return
        if uid in clans[clan_id]["members"]:
            bot.send_message(message.chat.id, "‚ùå –¢—ã —É–∂–µ –≤ —ç—Ç–æ–º –∫–ª–∞–Ω–µ!")
            return
        clans[clan_id]["members"].append(uid)
        players[uid]["clan_id"] = clan_id
        save_db()
        bot.send_message(message.chat.id, f"‚úÖ –¢—ã –≤—Å—Ç—É–ø–∏–ª –≤ –∫–ª–∞–Ω {clans[clan_id]['name']}", reply_markup=get_clan_root_keyboard(uid))

    @bot.message_handler(func=lambda m: m.text == "‚¨ÖÔ∏è –í—ã–π—Ç–∏ –∏–∑ –∫–ª–∞–Ω–∞")
    def leave_clan(message):
        uid = str(message.from_user.id)
        clan_id = players[uid].get("clan_id")
        if not clan_id or clan_id not in clans:
            bot.send_message(message.chat.id, "‚ùå –¢—ã –Ω–µ –≤ –∫–ª–∞–Ω–µ!")
            return
        clan = clans[clan_id]
        clan["members"].remove(uid)
        players[uid]["clan_id"] = None
        save_db()
        bot.send_message(message.chat.id, f"‚úÖ –¢—ã –ø–æ–∫–∏–Ω—É–ª –∫–ª–∞–Ω {clan['name']}", reply_markup=get_clan_root_keyboard(uid))

    @bot.message_handler(func=lambda m: m.text == "üìä –ö–ª–∞–Ω—Å–∫–æ–µ –º–µ–Ω—é")
    def clan_management(message):
        uid = str(message.from_user.id)
        clan_id = players[uid].get("clan_id")
        if not clan_id or clan_id not in clans:
            bot.send_message(message.chat.id, "‚ùå –¢—ã –Ω–µ –≤ –∫–ª–∞–Ω–µ!")
            return
        clan = clans[clan_id]
        text = (
            f"üè∞ –ö–ª–∞–Ω: {clan['name']}\n"
            f"üí∞ –ó–æ–ª–æ—Ç–æ –∫–ª–∞–Ω–∞: {clan['gold']}\n"
            f"‚≠ê –£—Ä–æ–≤–µ–Ω—å: {clan['level']}\n"
            f"üë• –ö–æ–ª-–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {len(clan['members'])}\n"
            f"üîß –£–ª—É—á—à–µ–Ω–∏—è: {', '.join(clan['upgrades'].keys()) if clan['upgrades'] else '–ù–µ—Ç'}"
        )
        bot.send_message(message.chat.id, text, reply_markup=get_clan_management_keyboard())

    @bot.message_handler(func=lambda m: m.text == "üí∞ –í–Ω–µ—Å—Ç–∏ –∑–æ–ª–æ—Ç–æ")
    def deposit_gold(message):
        uid = str(message.from_user.id)
        clan_id = players[uid].get("clan_id")
        if not clan_id or clan_id not in clans:
            bot.send_message(message.chat.id, "‚ùå –¢—ã –Ω–µ –≤ –∫–ª–∞–Ω–µ!")
            return
        clan = clans[clan_id]
        gold = players[uid].get("gold", 0)
        if gold <= 0:
            bot.send_message(message.chat.id, "‚ùå –£ —Ç–µ–±—è –Ω–µ—Ç –∑–æ–ª–æ—Ç–∞ –¥–ª—è –≤–∫–ª–∞–¥–∞!")
            return
        clan["gold"] += gold
        players[uid]["gold"] = 0
        save_db()
        bot.send_message(message.chat.id, f"üí∞ –¢—ã –≤–Ω–µ—Å {gold}üí∞ –≤ –∫–∞–∑–Ω—É –∫–ª–∞–Ω–∞!", reply_markup=get_clan_management_keyboard())

    @bot.message_handler(func=lambda m: m.text == "‚¨ÜÔ∏è –£–ª—É—á—à–∏—Ç—å –∫–ª–∞–Ω")
    def choose_upgrade(message):
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏ —É–ª—É—á—à–µ–Ω–∏–µ:", reply_markup=get_clan_upgrade_keyboard())

    @bot.message_handler(func=lambda m: any(m.text.startswith(f"‚¨ÜÔ∏è {name}") for name in CLAN_UPGRADES))
    def upgrade_clan(message):
        uid = str(message.from_user.id)
        clan_id = players[uid].get("clan_id")
        if not clan_id or clan_id not in clans:
            bot.send_message(message.chat.id, "‚ùå –¢—ã –Ω–µ –≤ –∫–ª–∞–Ω–µ!")
            return
        clan = clans[clan_id]

        selected_upgrade = next((name for name in CLAN_UPGRADES if message.text.startswith(f"‚¨ÜÔ∏è {name}")), None)
        if not selected_upgrade:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ —É–ª—É—á—à–µ–Ω–∏–µ!", reply_markup=get_clan_management_keyboard())
            return

        cost = CLAN_UPGRADES[selected_upgrade]
        if clan["gold"] < cost:
            bot.send_message(message.chat.id, f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è! –ù—É–∂–Ω–æ {cost}üí∞", reply_markup=get_clan_management_keyboard())
            return

        clan["gold"] -= cost
        # –ü—Ä–∏–º–µ–Ω—è–µ–º —É–ª—É—á—à–µ–Ω–∏–µ
        if "—É—Ä–æ–≤–Ω—è" in selected_upgrade.lower():
            clan["level"] += 1
        clan["upgrades"][selected_upgrade] = True
        save_db()
        bot.send_message(message.chat.id, f"‚¨ÜÔ∏è –ö–ª–∞–Ω —É–ª—É—á—à–µ–Ω! –ü—Ä–∏–º–µ–Ω–µ–Ω–æ: {selected_upgrade}\nüí∞ –ü–æ—Ç—Ä–∞—á–µ–Ω–æ –∑–æ–ª–æ—Ç–∞: {cost}", reply_markup=get_clan_management_keyboard())

    @bot.message_handler(func=lambda m: m.text == "üë• –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
    def list_members(message):
        uid = str(message.from_user.id)
        clan_id = players[uid].get("clan_id")
        if not clan_id or clan_id not in clans:
            bot.send_message(message.chat.id, "‚ùå –¢—ã –Ω–µ –≤ –∫–ª–∞–Ω–µ!")
            return
        clan = clans[clan_id]
        lines = []
        for member_id in clan["members"]:
            member_name = players.get(member_id, {}).get("name", "–ë–µ–∑—ã–º—è–Ω–Ω—ã–π")
            role = "–í–ª–∞–¥–µ–ª–µ—Ü" if member_id == clan["owner"] else "–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å" if member_id == clan.get("deputy") else "–£—á–∞—Å—Ç–Ω–∏–∫"
            lines.append(f"{member_name} ‚Äî {role}")
        bot.send_message(message.chat.id, "üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏ –∫–ª–∞–Ω–∞:\n" + "\n".join(lines), reply_markup=get_clan_management_keyboard())
