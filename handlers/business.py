# handlers/business.py
from telebot import TeleBot
from database import players, save_db
from keyboards import get_business_menu_keyboard, get_business_buy_keyboard
from data.game_data import CITIES
import time

CITY_TAX = {
    "–ú–æ—Å–∫–≤–∞": 0.05,
    "–ü–∞—Ä–∏–∂": 0.10,
    "–õ–æ–Ω–¥–æ–Ω": 0.08,
}
MAX_HOURS_WITHOUT_COLLECT = 6     # –µ—Å–ª–∏ –∫–æ–ø–∏—à—å –±–æ–ª—å—à–µ —ç—Ç–æ–≥–æ ‚Äî —á–∞—Å—Ç—å –ø—Ä–∏–±—ã–ª–∏ —Å–≥–æ—Ä–∞–µ—Ç
LOSS_RATE = 0.30                  # –ø—Ä–æ—Ü–µ–Ω—Ç –ø–æ—Ç–µ—Ä—å
PROFIT_COOLDOWN = 3600            # 1 —á–∞—Å –≤ —Å–µ–∫—É–Ω–¥–∞—Ö


# ================= –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï =================

def _find_business_cfg(city: str, name: str):
    """–ù–∞—Ö–æ–¥–∏—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∏–∑–Ω–µ—Å–∞ –ø–æ –∏–º–µ–Ω–∏ –∏ –≥–æ—Ä–æ–¥—É."""
    for b in CITIES.get(city, {}).get("businesses", []):
        if b["name"] == name:
            return b
    # fallback: –∏—â–µ–º –≤–æ –≤—Å–µ—Ö –≥–æ—Ä–æ–¥–∞—Ö
    for c, data in CITIES.items():
        for b in data.get("businesses", []):
            if b["name"] == name:
                return b | {"city": c}
    return None


def _normalize_owned_business(entry, fallback_city: str):
    """–ü—Ä–∏–≤–æ–¥–∏—Ç —Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç –±–∏–∑–Ω–µ—Å–∞ (—Å—Ç—Ä–æ–∫–∞) –∫ –Ω–æ–≤–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É (dict)."""
    if isinstance(entry, dict):
        name = entry.get("name")
        city = entry.get("city", fallback_city)
        profit = entry.get("profit")
        last_collect = entry.get("last_collect", 0)
        if profit is None:
            cfg = _find_business_cfg(city, name) or {}
            profit = cfg.get("profit", 0)
        return {"name": name, "city": city, "profit": profit, "last_collect": last_collect}
    else:
        name = str(entry)
        city = fallback_city
        cfg = _find_business_cfg(city, name) or {}
        return {"name": name, "city": cfg.get("city", city), "profit": cfg.get("profit", 0), "last_collect": 0}


def _normalize_player_businesses(uid: str):
    """–ú–∏–≥—Ä–∞—Ü–∏—è: –ø—Ä–∏–≤–æ–¥–∏—Ç –≤—Å–µ –±–∏–∑–Ω–µ—Å—ã –∏–≥—Ä–æ–∫–∞ –∫ dict-—Ñ–æ—Ä–º–∞—Ç—É."""
    p = players[uid]
    city = p.get("city", "–ú–æ—Å–∫–≤–∞")
    owned = p.get("businesses", [])
    normalized = [_normalize_owned_business(e, city) for e in owned]
    p["businesses"] = normalized
    return normalized


# ================== –†–ï–ì–ò–°–¢–†–ê–¶–ò–Ø –•–ï–ù–î–õ–ï–†–û–í ==================

def register_business_handlers(bot: TeleBot):

    # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–∏–∑–Ω–µ—Å–æ–≤
    @bot.message_handler(func=lambda m: m.text == "üíº –ë–∏–∑–Ω–µ—Å")
    def business_root(message):
        bot.send_message(message.chat.id, "üíº –ú–µ–Ω—é –±–∏–∑–Ω–µ—Å–∞:", reply_markup=get_business_menu_keyboard())

    # –ú–æ–∏ –±–∏–∑–Ω–µ—Å—ã
    @bot.message_handler(func=lambda m: m.text == "üìú –ú–æ–∏ –±–∏–∑–Ω–µ—Å—ã")
    def my_businesses(message):
        uid = str(message.from_user.id)
        owned = _normalize_player_businesses(uid)
        if not owned:
            bot.send_message(message.chat.id, "‚ùå –£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç –±–∏–∑–Ω–µ—Å–æ–≤.")
            return

        now_ts = time.time()
        lines = []
        for b in owned:
            remaining = max(0, PROFIT_COOLDOWN - int(now_ts - b.get("last_collect", 0)))
            rem_min = remaining // 60
            lines.append(f"‚Ä¢ {b['name']} ({b['city']}) ‚Äî {b['profit']}üí∞/—á–∞—Å | –¥–æ —Å–±–æ—Ä–∞: {rem_min} –º–∏–Ω")
        save_db()
        bot.send_message(message.chat.id, "üìã –¢–≤–æ–∏ –±–∏–∑–Ω–µ—Å—ã:\n" + "\n".join(lines))

    # –ö—É–ø–∏—Ç—å –±–∏–∑–Ω–µ—Å (–º–µ–Ω—é)
    @bot.message_handler(func=lambda m: m.text == "üè≠ –ö—É–ø–∏—Ç—å –±–∏–∑–Ω–µ—Å")
    def buy_business_menu(message):
        uid = str(message.from_user.id)
        city = players[uid].get("city", "–ú–æ—Å–∫–≤–∞")
        bot.send_message(message.chat.id, f"üè≠ –î–æ—Å—Ç—É–ø–Ω—ã–µ –±–∏–∑–Ω–µ—Å—ã –≤ {city}:", reply_markup=get_business_buy_keyboard(city))

    # –ö—É–ø–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –±–∏–∑–Ω–µ—Å
    @bot.message_handler(func=lambda m: m.text.startswith("–ö—É–ø–∏—Ç—å –±–∏–∑–Ω–µ—Å: "))
    def buy_business(message):
        uid = str(message.from_user.id)
        p = players[uid]
        city = p.get("city", "–ú–æ—Å–∫–≤–∞")
        business_name = message.text.replace("–ö—É–ø–∏—Ç—å –±–∏–∑–Ω–µ—Å: ", "").split(" (")[0]

        cfg = _find_business_cfg(city, business_name)
        if not cfg:
            bot.send_message(message.chat.id, "‚ùå –ë–∏–∑–Ω–µ—Å –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return

        price = cfg["price"]
        if p["gold"] < price:
            bot.send_message(message.chat.id, "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞!")
            return

        p["gold"] -= price
        p.setdefault("businesses", [])
        p["businesses"].append({
            "name": cfg["name"],
            "city": city,
            "profit": cfg["profit"],
            "last_collect": time.time()
        })
        save_db()
        bot.send_message(message.chat.id, f"‚úÖ –ö—É–ø–ª–µ–Ω –±–∏–∑–Ω–µ—Å: {cfg['name']} –∑–∞ {price}üí∞")

    # –°–æ–±—Ä–∞—Ç—å –ø—Ä–∏–±—ã–ª—å
    @bot.message_handler(func=lambda m: m.text == "üí∞ –°–æ–±—Ä–∞—Ç—å –ø—Ä–∏–±—ã–ª—å")
    def collect_profit(message):
        uid = str(message.from_user.id)
        p = players[uid]
        owned = _normalize_player_businesses(uid)  # —Ç–≤–æ—è —Ñ—É–Ω–∫—Ü–∏—è, –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç —Å–ø–∏—Å–æ–∫ –±–∏–∑–Ω–µ—Å–æ–≤
        if not owned:
            bot.send_message(message.chat.id, "‚ùå –£ —Ç–µ–±—è –Ω–µ—Ç –±–∏–∑–Ω–µ—Å–æ–≤ –¥–ª—è –ø—Ä–∏–±—ã–ª–∏.")
            return

        now_ts = time.time()
        total = 0
        collected_any = False
        details = []

        for b in owned:
            last_collect = b.get("last_collect", 0)
            elapsed = now_ts - last_collect

            if elapsed >= PROFIT_COOLDOWN and b["profit"] > 0:
                earned = b["profit"]  # –ø—Ä–∏–±—ã–ª—å –∑–∞ –¥–µ–Ω—å
                tax_rate = CITY_TAX.get(b["city"], 0.05)  # –Ω–∞–ª–æ–≥ –≥–æ—Ä–æ–¥–∞
                tax = int(earned * tax_rate)
                earned -= tax

                details.append(f"{b['name']} ({b['city']}) ‚Äî –ø—Ä–∏–±—ã–ª—å {earned}üí∞ (–Ω–∞–ª–æ–≥ {tax}üí∞)")
                total += earned

                b["last_collect"] = now_ts
                collected_any = True
            else:
                remaining = int((PROFIT_COOLDOWN - elapsed) // 3600)
                details.append(f"{b['name']} ({b['city']}) ‚Äî –∂–¥–∞—Ç—å –µ—â—ë {remaining}—á")

        if not collected_any:
            bot.send_message(message.chat.id, "‚è≥ –ü–æ–∫–∞ –Ω–µ—á–µ–≥–æ —Å–æ–±–∏—Ä–∞—Ç—å.\n\n" + "\n".join(details))
            return

        p["gold"] += total
        p["businesses"] = owned
        save_db()

        text = f"üí∞ –°–æ–±—Ä–∞–Ω–æ –ø—Ä–∏–±—ã–ª–∏: {total}üí∞\n\n" + "\n".join(details)
        bot.send_message(message.chat.id, text)
 
    @bot.message_handler(func=lambda m: m.text == "üìë –°–æ–±—Ä–∞—Ç—å –∞—Ä–µ–Ω–¥—É")
    def collect_rent(message):
        uid = str(message.from_user.id)
        p = players[uid]
        owned = p.get("realty", [])
        if not owned:
            bot.send_message(message.chat.id, "‚ùå –£ —Ç–µ–±—è –Ω–µ—Ç –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏.")
            return

        now_ts = time.time()
        total = 0
        collected_any = False
        details = []

        for r in owned:
            last_collect = r.get("last_collect", 0)
            elapsed = now_ts - last_collect

            if elapsed >= PROFIT_COOLDOWN and r["rent"] > 0:
                earned = r["rent"]  # –∞—Ä–µ–Ω–¥–∞ –∑–∞ –¥–µ–Ω—å
                details.append(f"{r['name']} ‚Äî –∞—Ä–µ–Ω–¥–∞ {earned}üí∞")
                total += earned
                r["last_collect"] = now_ts
                collected_any = True
            else:
                remaining = int((PROFIT_COOLDOWN - elapsed) // 3600)
                details.append(f"{r['name']} ‚Äî –∂–¥–∞—Ç—å –µ—â—ë {remaining}—á")

        if not collected_any:
            bot.send_message(message.chat.id, "‚è≥ –ü–æ–∫–∞ –Ω–µ—á–µ–≥–æ —Å–æ–±–∏—Ä–∞—Ç—å.\n\n" + "\n".join(details))
            return

        p["gold"] += total
        p["realty"] = owned
        save_db()

        text = f"üèò –°–æ–±—Ä–∞–Ω–æ –∞—Ä–µ–Ω–¥—ã: {total}üí∞\n\n" + "\n".join(details)
        bot.send_message(message.chat.id, text)